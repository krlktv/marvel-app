{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/pages/MainPage.jsx"],"names":["ErrorMessage","src","img","alt","style","display","width","height","objectFit","margin","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.e71796b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img\n\t\t\tsrc={img}\n\t\t\talt=\"Error\"\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'block',\n\t\t\t\twidth: '250px',\n\t\t\t\theight: '250px',\n\t\t\t\tobjectFit: 'contain',\n\t\t\t\tmargin: '0 auto',\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default ErrorMessage;\n","import {\n\tuseHttp\n} from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst {\n\t\tloading,\n\t\trequest,\n\t\terror,\n\t\tclearError\n\t} = useHttp();\n\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\tconst _apiKey = 'apikey=953c7b2c43941d945893eb4ae855e28d';\n\tconst _baseOffset = 210;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0])\n\t}\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformComics);\n\t}\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t}\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t}\n\t}\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || 'There is no description',\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'Not available'\n\t\t}\n\t}\n\n\treturn {\n\t\tloading,\n\t\terror,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tclearError,\n\t\tgetAllComics,\n\t\tgetComic\n\t}\n}\n\nexport default useMarvelService;","import {\n\tuseState,\n\tuseCallback\n} from 'react';\n\nexport const useHttp = () => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\t\turl,\n\t\t\t\tmethod = 'GET',\n\t\t\t\tbody = null,\n\t\t\t\theaders = {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t) => {\n\t\t\t\tsetLoading(true);\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\theaders\n\t\t\t\t\t});\n\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t\t\t}\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\treturn data;\n\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tsetError(e.message);\n\t\t\t\t\tthrow e;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => setError(null), []);\n\n\treturn {\n\t\tloading,\n\t\trequest,\n\t\terror,\n\t\tclearError\n\t};\n};","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null);\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\tconst timerId = setInterval(updateChar, 1000000);\n\n\t\treturn () => {\n\t\t\tclearInterval(timerId);\n\t\t};\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\t\tgetCharacter(id).then(onCharLoaded);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = char;\n\tlet imgStyle = { objectFit: 'cover' };\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'fill' };\n\t}\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt=\"Random character\"\n\t\t\t\tclassName=\"randomchar__img\"\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{description}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">Homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { loading, error, getAllCharacters, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tclearError();\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset).then(onCharListLoaded);\n\t};\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList((charList) => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset((offset) => offset + 9);\n\t\tsetCharEnded(ended);\n\t};\n\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach((item) =>\n\t\t\titem.classList.remove('char__item_selected')\n\t\t);\n\t\titemRefs.current[id].classList.add('char__item_selected');\n\t\titemRefs.current[id].focus();\n\t};\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: 'fill' };\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={(el) => (itemRefs.current[i] = el)}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn <ul className=\"char__grid\">{items}</ul>;\n\t}\n\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, [props.charId]);\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\t\tclearError();\n\t\tgetCharacter(charId).then(onCharLoaded);\n\t};\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />;\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char;\n\n\tlet imgStyle = { objectFit: 'cover' };\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'fill' };\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">{description}</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n\tstate = {\n\t\terror: false,\n\t};\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\tconsole.log(error, errorInfo);\n\t\tthis.setState({\n\t\t\terror: true,\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn <ErrorMessage />;\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\n\nimport RandomChar from '../randomChar/RandomChar';\nimport CharList from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\tconst [selectedChar, setChar] = useState(null);\n\n\tconst onCharSelected = (id) => {\n\t\tsetChar(id);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<RandomChar />\n\t\t\t</ErrorBoundary>\n\t\t\t<div className=\"char__content\">\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\n\t\t\t\t</ErrorBoundary>\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CharInfo charId={selectedChar} />\n\t\t\t\t</ErrorBoundary>\n\t\t\t</div>\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n\t\t</>\n\t);\n};\n\nexport default MainPage;\n"],"sourceRoot":""}